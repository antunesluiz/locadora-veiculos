/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package veiculo;

import Main.Principal;
import cliente.Cliente;
import java.awt.Dimension;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.ArrayList;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Luiz Antunes
 */
public class ListarVeiculos extends javax.swing.JInternalFrame {

    private DefaultTableModel defaultTableModel;

    private cliente.Cliente cliente;

    /**
     * Creates new form ListarVeiculos
     *
     * @param cliente
     */
    public ListarVeiculos(Cliente cliente) {

        if (cliente != null) {
            this.cliente = cliente;
        }

        initComponents();
        ((BasicInternalFrameUI) this.getUI()).setNorthPane(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog1 = new javax.swing.JDialog();
        jLabel1 = new javax.swing.JLabel();
        txtCarroceria = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setText("Filtrar por Carroceria");

        jButton1.setBackground(new java.awt.Color(0, 102, 102));
        jButton1.setText("Procurar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jScrollPane1.setBackground(new java.awt.Color(0, 153, 153));
        jScrollPane1.setForeground(new java.awt.Color(0, 153, 153));

        jTable1.setForeground(new java.awt.Color(51, 51, 51));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "Marca", "Cor", "Modelo", "Ano", "Categoria", "Combustível", "Preço"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setColumnSelectionAllowed(true);
        jTable1.setMaximumSize(new java.awt.Dimension(806, 0));
        jTable1.setMinimumSize(new java.awt.Dimension(806, 0));
        jTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTable1);
        jTable1.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
            jTable1.getColumnModel().getColumn(2).setResizable(false);
            jTable1.getColumnModel().getColumn(3).setResizable(false);
            jTable1.getColumnModel().getColumn(4).setResizable(false);
            jTable1.getColumnModel().getColumn(5).setResizable(false);
            jTable1.getColumnModel().getColumn(6).setResizable(false);
            jTable1.getColumnModel().getColumn(7).setResizable(false);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 806, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtCarroceria)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCarroceria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 494, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        VeiculoDaoImpl veiculoDaoImpl = new VeiculoDaoImpl();

        if (txtCarroceria != null && !txtCarroceria.getText().equals("")) {
            ArrayList<Veiculo> veiculos = veiculoDaoImpl.getVeiculosPelaCarroceria(txtCarroceria.getText());

            ((DefaultTableModel) jTable1.getModel()).setRowCount(0);

            if (veiculos != null && veiculos.size() > 0) {
                veiculos.stream().map((veiculo) -> {
                    CombustivelVeiculo combustivelVeiculo = veiculoDaoImpl.getCombustivelPeloId(veiculo.getCombustivelVeiculo());
                    CategoriaVeiculo categoriaVeiculo = veiculoDaoImpl.getCategoriaPeloId(veiculo.getCategoriaVeiculo());
                    CarroceriaVeiculo carroceriaVeiculo = veiculoDaoImpl.getCarroceriaById(veiculo.getCarroceriaVeiculo());

                    Object[] objects = new Object[9];

                    if (combustivelVeiculo != null) {
                        if (categoriaVeiculo != null) {
                            if (carroceriaVeiculo != null) {
                                objects[0] = veiculo.getId();
                                objects[1] = veiculo.getMarca();
                                objects[2] = veiculo.getCor();
                                objects[3] = veiculo.getModelo();
                                objects[4] = veiculo.getAno();
                                objects[5] = categoriaVeiculo.getNome();
                                objects[6] = combustivelVeiculo.getNome();
                                objects[7] = categoriaVeiculo.getPreco();
                                objects[8] = carroceriaVeiculo.getNome();
                            } else {
                                objects[0] = veiculo.getId();
                                objects[1] = veiculo.getMarca();
                                objects[2] = veiculo.getCor();
                                objects[3] = veiculo.getModelo();
                                objects[4] = veiculo.getAno();
                                objects[5] = categoriaVeiculo.getNome();
                                objects[6] = combustivelVeiculo.getNome();
                                objects[7] = categoriaVeiculo.getPreco();
                            }
                        } else {
                            if (carroceriaVeiculo != null) {
                                objects[0] = veiculo.getId();
                                objects[1] = veiculo.getMarca();
                                objects[2] = veiculo.getCor();
                                objects[3] = veiculo.getModelo();
                                objects[4] = veiculo.getAno();
                                objects[6] = combustivelVeiculo.getNome();
                                objects[8] = carroceriaVeiculo.getNome();
                            } else {
                                objects[0] = veiculo.getId();
                                objects[1] = veiculo.getMarca();
                                objects[2] = veiculo.getCor();
                                objects[3] = veiculo.getModelo();
                                objects[4] = veiculo.getAno();
                                objects[6] = combustivelVeiculo.getNome();
                            }
                        }
                    } else {
                        if (categoriaVeiculo != null) {
                            if (carroceriaVeiculo != null) {
                                objects[0] = veiculo.getId();
                                objects[1] = veiculo.getMarca();
                                objects[2] = veiculo.getCor();
                                objects[3] = veiculo.getModelo();
                                objects[4] = veiculo.getAno();
                                objects[5] = categoriaVeiculo.getNome();
                                objects[7] = categoriaVeiculo.getPreco();
                                objects[8] = carroceriaVeiculo.getNome();
                            } else {
                                objects[0] = veiculo.getId();
                                objects[1] = veiculo.getMarca();
                                objects[2] = veiculo.getCor();
                                objects[3] = veiculo.getModelo();
                                objects[4] = veiculo.getAno();
                                objects[5] = categoriaVeiculo.getNome();
                                objects[7] = categoriaVeiculo.getPreco();
                            }
                        } else {
                            if (carroceriaVeiculo != null) {
                                objects[0] = veiculo.getId();
                                objects[1] = veiculo.getMarca();
                                objects[2] = veiculo.getCor();
                                objects[3] = veiculo.getModelo();
                                objects[4] = veiculo.getAno();
                                objects[8] = carroceriaVeiculo.getNome();
                            } else {
                                objects[0] = veiculo.getId();
                                objects[1] = veiculo.getMarca();
                                objects[2] = veiculo.getCor();
                                objects[3] = veiculo.getModelo();
                                objects[4] = veiculo.getAno();
                            }
                        }
                    }

                    return objects;
                }).forEachOrdered((objects) -> {
                    defaultTableModel.addRow(objects);
                });
            }
        } else {
            popularTabela();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    public void popularTabela() {
        VeiculoDaoImpl veiculoDaoImpl = new VeiculoDaoImpl();
        ArrayList<Veiculo> veiculos = veiculoDaoImpl.getVeiculosDisponiveis();

        String colunas[] = {"id", "Marca", "Cor", "Modelo", "Ano", "Categoria", "Combustível", "Preço", "Carroceria"};
        defaultTableModel = new DefaultTableModel(colunas, 0);

        jTable1.setModel(defaultTableModel);
        if (veiculos != null && veiculos.size() > 0) {
            veiculos.stream().map((veiculo) -> {
                CombustivelVeiculo combustivelVeiculo = veiculoDaoImpl.getCombustivelPeloId(veiculo.getCombustivelVeiculo());
                CategoriaVeiculo categoriaVeiculo = veiculoDaoImpl.getCategoriaPeloId(veiculo.getCategoriaVeiculo());
                CarroceriaVeiculo carroceriaVeiculo = veiculoDaoImpl.getCarroceriaById(veiculo.getCarroceriaVeiculo());

                Object[] objects = new Object[9];

                if (combustivelVeiculo != null) {
                    if (categoriaVeiculo != null) {
                        if (carroceriaVeiculo != null) {
                            objects[0] = veiculo.getId();
                            objects[1] = veiculo.getMarca();
                            objects[2] = veiculo.getCor();
                            objects[3] = veiculo.getModelo();
                            objects[4] = veiculo.getAno();
                            objects[5] = categoriaVeiculo.getNome();
                            objects[6] = combustivelVeiculo.getNome();
                            objects[7] = categoriaVeiculo.getPreco();
                            objects[8] = carroceriaVeiculo.getNome();
                        } else {
                            objects[0] = veiculo.getId();
                            objects[1] = veiculo.getMarca();
                            objects[2] = veiculo.getCor();
                            objects[3] = veiculo.getModelo();
                            objects[4] = veiculo.getAno();
                            objects[5] = categoriaVeiculo.getNome();
                            objects[6] = combustivelVeiculo.getNome();
                            objects[7] = categoriaVeiculo.getPreco();
                        }
                    } else {
                        if (carroceriaVeiculo != null) {
                            objects[0] = veiculo.getId();
                            objects[1] = veiculo.getMarca();
                            objects[2] = veiculo.getCor();
                            objects[3] = veiculo.getModelo();
                            objects[4] = veiculo.getAno();
                            objects[6] = combustivelVeiculo.getNome();
                            objects[8] = carroceriaVeiculo.getNome();
                        } else {
                            objects[0] = veiculo.getId();
                            objects[1] = veiculo.getMarca();
                            objects[2] = veiculo.getCor();
                            objects[3] = veiculo.getModelo();
                            objects[4] = veiculo.getAno();
                            objects[6] = combustivelVeiculo.getNome();
                        }
                    }
                } else {
                    if (categoriaVeiculo != null) {
                        if (carroceriaVeiculo != null) {
                            objects[0] = veiculo.getId();
                            objects[1] = veiculo.getMarca();
                            objects[2] = veiculo.getCor();
                            objects[3] = veiculo.getModelo();
                            objects[4] = veiculo.getAno();
                            objects[5] = categoriaVeiculo.getNome();
                            objects[7] = categoriaVeiculo.getPreco();
                            objects[8] = carroceriaVeiculo.getNome();
                        } else {
                            objects[0] = veiculo.getId();
                            objects[1] = veiculo.getMarca();
                            objects[2] = veiculo.getCor();
                            objects[3] = veiculo.getModelo();
                            objects[4] = veiculo.getAno();
                            objects[5] = categoriaVeiculo.getNome();
                            objects[7] = categoriaVeiculo.getPreco();
                        }
                    } else {
                        if (carroceriaVeiculo != null) {
                            objects[0] = veiculo.getId();
                            objects[1] = veiculo.getMarca();
                            objects[2] = veiculo.getCor();
                            objects[3] = veiculo.getModelo();
                            objects[4] = veiculo.getAno();
                            objects[8] = carroceriaVeiculo.getNome();
                        } else {
                            objects[0] = veiculo.getId();
                            objects[1] = veiculo.getMarca();
                            objects[2] = veiculo.getCor();
                            objects[3] = veiculo.getModelo();
                            objects[4] = veiculo.getAno();
                        }
                    }
                }

                return objects;
            }).forEachOrdered((objects) -> {
                defaultTableModel.addRow(objects);
            });
        }

        jTable1.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                Object data = jTable1.getModel().getValueAt(jTable1.getSelectedRow(), 0);

                int input = JOptionPane.showConfirmDialog(ListarVeiculos.this, "Você tem certeza que deseja alugar esse veículo?");

                if (input == 1) {
                    //faz nada
                } else {
                    if (input == 2) {
                        //faz nada
                    } else {
                        if (data != null) {
                            if (veiculoDaoImpl.reservaVeiculo((int) data, cliente.getId())) {
                                if (veiculoDaoImpl.updateStatusVeiculo((int) data, 2)) {
                                    JOptionPane.showMessageDialog(null, "Veículo Reservado com sucesso");
                                } else {
                                    JOptionPane.showMessageDialog(null, "Não foi possível reservar veículo");
                                }
                            } else {
                                JOptionPane.showMessageDialog(null, "Não foi possível reservar veículo");
                            }
                        }
                    }
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtCarroceria;
    // End of variables declaration//GEN-END:variables
}
